{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled4.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyPL91ieoTjtYxn0wSpHvDC4",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/fk03983/Physiological-Feature-Extraction-using-Thermal-Imaging/blob/master/face_detection%20CNN\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3ybg8UARTkYa",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import tensorflow as tf\n",
        "import numpy as np\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D\n",
        "from keras.optimizers import SGD, Adam\n"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "k66TQyhTT4W-",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 440
        },
        "outputId": "8a8b9955-c196-49b9-cfc7-8f94a77a4d6c"
      },
      "source": [
        "!wget https://github.com/fk03983/Physiological-Feature-Extraction-using-Thermal-Imaging/blob/master/Physiological-Feature-Extraction-using-Thermal-Imaging.zip?raw=true -O data.zip\n",
        "!unzip data.zip"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "--2020-08-09 21:17:24--  https://github.com/fk03983/Physiological-Feature-Extraction-using-Thermal-Imaging/blob/master/Physiological-Feature-Extraction-using-Thermal-Imaging.zip?raw=true\n",
            "Resolving github.com (github.com)... 192.30.255.113\n",
            "Connecting to github.com (github.com)|192.30.255.113|:443... connected.\n",
            "HTTP request sent, awaiting response... 302 Found\n",
            "Location: https://github.com/fk03983/Physiological-Feature-Extraction-using-Thermal-Imaging/raw/master/Physiological-Feature-Extraction-using-Thermal-Imaging.zip [following]\n",
            "--2020-08-09 21:17:24--  https://github.com/fk03983/Physiological-Feature-Extraction-using-Thermal-Imaging/raw/master/Physiological-Feature-Extraction-using-Thermal-Imaging.zip\n",
            "Reusing existing connection to github.com:443.\n",
            "HTTP request sent, awaiting response... 302 Found\n",
            "Location: https://raw.githubusercontent.com/fk03983/Physiological-Feature-Extraction-using-Thermal-Imaging/master/Physiological-Feature-Extraction-using-Thermal-Imaging.zip [following]\n",
            "--2020-08-09 21:17:24--  https://raw.githubusercontent.com/fk03983/Physiological-Feature-Extraction-using-Thermal-Imaging/master/Physiological-Feature-Extraction-using-Thermal-Imaging.zip\n",
            "Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.0.133, 151.101.64.133, 151.101.128.133, ...\n",
            "Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.0.133|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 67499129 (64M) [application/zip]\n",
            "Saving to: ‘data.zip’\n",
            "\n",
            "data.zip            100%[===================>]  64.37M  99.1MB/s    in 0.6s    \n",
            "\n",
            "2020-08-09 21:17:27 (99.1 MB/s) - ‘data.zip’ saved [67499129/67499129]\n",
            "\n",
            "Archive:  data.zip\n",
            "  inflating: keypoints.npy           \n",
            "  inflating: train_images.npy        \n",
            "  inflating: bounding_box.npy        \n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "v0qOV5jobXRN",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "x = np.load( \"train_images.npy\") / 255\n",
        "x = x.reshape(2935, 192, 256, 1)"
      ],
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RxOqdGLYb5Rq",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "y = np.load('bounding_box.npy')\n",
        "y[:, 0], y[:, 1] = y[:, 0] / 256, y[:,1]/256\n",
        "y[:, 2], y[:, 3] = y[:, 2] / 192, y[:,3]/192"
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "opXehJSmdTIK",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "n = x.shape[0]\n",
        "indices = list(range(n))\n",
        "train_indices = np.random.choice(indices, size = int(n * 0.7), replace = False)\n",
        "test_indices = np.asarray(list(set(indices) - set(train_indices)))"
      ],
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZsNiuNrZfute",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "x_train = x[train_indices]\n",
        "y_train = y[train_indices]\n",
        "x_test = x[test_indices]\n",
        "y_test = y[test_indices]"
      ],
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1uPhUx_OgFMx",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 84
        },
        "outputId": "207ada0f-a6ad-439d-adcf-ed3effc644fb"
      },
      "source": [
        "print(x_train.shape)\n",
        "print(y_train.shape)\n",
        "print(x_test.shape)\n",
        "print(y_test.shape)\n",
        "\n"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(2054, 192, 256, 1)\n",
            "(2054, 4)\n",
            "(881, 192, 256, 1)\n",
            "(881, 4)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KhL3HbTzgVRy",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "model = Sequential()\n",
        "model.add(Conv2D(32, (3, 3), padding = 'same', activation='tanh', input_shape=(192, 256, 1)))\n",
        "model.add(MaxPool2D(pool_size=(2, 2)))\n",
        "model.add(Dropout(0.25))\n",
        "model.add(Flatten())\n",
        "model.add(Dense(256, activation='tanh'))\n",
        "model.add(Dropout(0.5))\n",
        "model.add(Dense(4, activation='sigmoid'))\n",
        "\n",
        "sgd = SGD(lr=0.001, decay=1e-6, momentum=0.9, nesterov=True)\n",
        "model.compile(loss='mean_squared_error', optimizer=sgd)"
      ],
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "omM0NYfsiZVo",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "ac341d6d-a874-43a9-bea5-95ed326aa681"
      },
      "source": [
        "model.fit(x_train, y_train, batch_size=128, epochs=1000, validation_data = (x_test, y_test), verbose = 1)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/1000\n",
            "17/17 [==============================] - 2s 141ms/step - loss: 0.0142 - val_loss: 0.0060\n",
            "Epoch 2/1000\n",
            "17/17 [==============================] - 2s 127ms/step - loss: 0.0069 - val_loss: 0.0024\n",
            "Epoch 3/1000\n",
            "17/17 [==============================] - 2s 127ms/step - loss: 0.0046 - val_loss: 0.0021\n",
            "Epoch 4/1000\n",
            "17/17 [==============================] - 2s 127ms/step - loss: 0.0041 - val_loss: 0.0020\n",
            "Epoch 5/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0037 - val_loss: 0.0018\n",
            "Epoch 6/1000\n",
            "17/17 [==============================] - 2s 127ms/step - loss: 0.0035 - val_loss: 0.0017\n",
            "Epoch 7/1000\n",
            "17/17 [==============================] - 2s 127ms/step - loss: 0.0034 - val_loss: 0.0016\n",
            "Epoch 8/1000\n",
            "17/17 [==============================] - 2s 127ms/step - loss: 0.0033 - val_loss: 0.0016\n",
            "Epoch 9/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0033 - val_loss: 0.0016\n",
            "Epoch 10/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0032 - val_loss: 0.0016\n",
            "Epoch 11/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0032 - val_loss: 0.0014\n",
            "Epoch 12/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0030 - val_loss: 0.0014\n",
            "Epoch 13/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0031 - val_loss: 0.0014\n",
            "Epoch 14/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0030 - val_loss: 0.0014\n",
            "Epoch 15/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0029 - val_loss: 0.0014\n",
            "Epoch 16/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0030 - val_loss: 0.0013\n",
            "Epoch 17/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0030 - val_loss: 0.0013\n",
            "Epoch 18/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0029 - val_loss: 0.0014\n",
            "Epoch 19/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0029 - val_loss: 0.0013\n",
            "Epoch 20/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0029 - val_loss: 0.0013\n",
            "Epoch 21/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0028 - val_loss: 0.0013\n",
            "Epoch 22/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0028 - val_loss: 0.0013\n",
            "Epoch 23/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0027 - val_loss: 0.0013\n",
            "Epoch 24/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0027 - val_loss: 0.0012\n",
            "Epoch 25/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0028 - val_loss: 0.0013\n",
            "Epoch 26/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0028 - val_loss: 0.0012\n",
            "Epoch 27/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0027 - val_loss: 0.0012\n",
            "Epoch 28/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0027 - val_loss: 0.0012\n",
            "Epoch 29/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0027 - val_loss: 0.0012\n",
            "Epoch 30/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0027 - val_loss: 0.0012\n",
            "Epoch 31/1000\n",
            "17/17 [==============================] - 2s 131ms/step - loss: 0.0026 - val_loss: 0.0012\n",
            "Epoch 32/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0027 - val_loss: 0.0012\n",
            "Epoch 33/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0026 - val_loss: 0.0012\n",
            "Epoch 34/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0027 - val_loss: 0.0012\n",
            "Epoch 35/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0026 - val_loss: 0.0012\n",
            "Epoch 36/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0026 - val_loss: 0.0012\n",
            "Epoch 37/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0026 - val_loss: 0.0012\n",
            "Epoch 38/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0026 - val_loss: 0.0011\n",
            "Epoch 39/1000\n",
            "17/17 [==============================] - 2s 131ms/step - loss: 0.0026 - val_loss: 0.0012\n",
            "Epoch 40/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0026 - val_loss: 0.0011\n",
            "Epoch 41/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0026 - val_loss: 0.0012\n",
            "Epoch 42/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0026 - val_loss: 0.0011\n",
            "Epoch 43/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0025 - val_loss: 0.0011\n",
            "Epoch 44/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0025 - val_loss: 0.0011\n",
            "Epoch 45/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0025 - val_loss: 0.0011\n",
            "Epoch 46/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0025 - val_loss: 0.0011\n",
            "Epoch 47/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0026 - val_loss: 0.0012\n",
            "Epoch 48/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0025 - val_loss: 0.0011\n",
            "Epoch 49/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0025 - val_loss: 0.0011\n",
            "Epoch 50/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0025 - val_loss: 0.0011\n",
            "Epoch 51/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0025 - val_loss: 0.0011\n",
            "Epoch 52/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0024 - val_loss: 0.0011\n",
            "Epoch 53/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0025 - val_loss: 0.0011\n",
            "Epoch 54/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0025 - val_loss: 0.0011\n",
            "Epoch 55/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0025 - val_loss: 0.0011\n",
            "Epoch 56/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0024 - val_loss: 0.0011\n",
            "Epoch 57/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0024 - val_loss: 0.0011\n",
            "Epoch 58/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0024 - val_loss: 0.0011\n",
            "Epoch 59/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0026 - val_loss: 0.0011\n",
            "Epoch 60/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0024 - val_loss: 0.0011\n",
            "Epoch 61/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0025 - val_loss: 0.0011\n",
            "Epoch 62/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0024 - val_loss: 0.0010\n",
            "Epoch 63/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0024 - val_loss: 0.0011\n",
            "Epoch 64/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0024 - val_loss: 0.0010\n",
            "Epoch 65/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0024 - val_loss: 0.0011\n",
            "Epoch 66/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0024 - val_loss: 0.0010\n",
            "Epoch 67/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0024 - val_loss: 0.0011\n",
            "Epoch 68/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0024 - val_loss: 0.0010\n",
            "Epoch 69/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0024 - val_loss: 0.0010\n",
            "Epoch 70/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0024 - val_loss: 0.0010\n",
            "Epoch 71/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0024 - val_loss: 0.0011\n",
            "Epoch 72/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0024 - val_loss: 0.0011\n",
            "Epoch 73/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0023 - val_loss: 0.0010\n",
            "Epoch 74/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0024 - val_loss: 0.0010\n",
            "Epoch 75/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0023 - val_loss: 0.0010\n",
            "Epoch 76/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0023 - val_loss: 0.0010\n",
            "Epoch 77/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0024 - val_loss: 0.0010\n",
            "Epoch 78/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0023 - val_loss: 0.0010\n",
            "Epoch 79/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0023 - val_loss: 0.0010\n",
            "Epoch 80/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0023 - val_loss: 0.0010\n",
            "Epoch 81/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0023 - val_loss: 9.9624e-04\n",
            "Epoch 82/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0023 - val_loss: 0.0010\n",
            "Epoch 83/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0023 - val_loss: 0.0010\n",
            "Epoch 84/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0024 - val_loss: 0.0010\n",
            "Epoch 85/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0023 - val_loss: 9.9651e-04\n",
            "Epoch 86/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0023 - val_loss: 0.0010\n",
            "Epoch 87/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0022 - val_loss: 9.8214e-04\n",
            "Epoch 88/1000\n",
            "17/17 [==============================] - 2s 127ms/step - loss: 0.0023 - val_loss: 9.8075e-04\n",
            "Epoch 89/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0023 - val_loss: 9.9138e-04\n",
            "Epoch 90/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0023 - val_loss: 9.8364e-04\n",
            "Epoch 91/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0023 - val_loss: 9.8128e-04\n",
            "Epoch 92/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0023 - val_loss: 9.7294e-04\n",
            "Epoch 93/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0023 - val_loss: 9.7340e-04\n",
            "Epoch 94/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0022 - val_loss: 9.7373e-04\n",
            "Epoch 95/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0023 - val_loss: 9.7308e-04\n",
            "Epoch 96/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0022 - val_loss: 9.6406e-04\n",
            "Epoch 97/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0022 - val_loss: 9.6345e-04\n",
            "Epoch 98/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0022 - val_loss: 9.5785e-04\n",
            "Epoch 99/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0022 - val_loss: 9.7182e-04\n",
            "Epoch 100/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0022 - val_loss: 9.6402e-04\n",
            "Epoch 101/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0022 - val_loss: 9.5379e-04\n",
            "Epoch 102/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0022 - val_loss: 9.5558e-04\n",
            "Epoch 103/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0022 - val_loss: 9.7071e-04\n",
            "Epoch 104/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0022 - val_loss: 9.4724e-04\n",
            "Epoch 105/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0022 - val_loss: 9.5365e-04\n",
            "Epoch 106/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0022 - val_loss: 9.7302e-04\n",
            "Epoch 107/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0022 - val_loss: 9.4388e-04\n",
            "Epoch 108/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0022 - val_loss: 9.5261e-04\n",
            "Epoch 109/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0022 - val_loss: 9.4892e-04\n",
            "Epoch 110/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0022 - val_loss: 9.3654e-04\n",
            "Epoch 111/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0022 - val_loss: 9.4178e-04\n",
            "Epoch 112/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0021 - val_loss: 9.3573e-04\n",
            "Epoch 113/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0022 - val_loss: 9.3352e-04\n",
            "Epoch 114/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0022 - val_loss: 9.3298e-04\n",
            "Epoch 115/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0022 - val_loss: 9.4900e-04\n",
            "Epoch 116/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0021 - val_loss: 9.3614e-04\n",
            "Epoch 117/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0022 - val_loss: 9.2543e-04\n",
            "Epoch 118/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0021 - val_loss: 9.3569e-04\n",
            "Epoch 119/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0021 - val_loss: 9.4747e-04\n",
            "Epoch 120/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0022 - val_loss: 9.3867e-04\n",
            "Epoch 121/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0021 - val_loss: 9.3138e-04\n",
            "Epoch 122/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0022 - val_loss: 9.5010e-04\n",
            "Epoch 123/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0022 - val_loss: 9.3176e-04\n",
            "Epoch 124/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0021 - val_loss: 9.1965e-04\n",
            "Epoch 125/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0021 - val_loss: 9.2655e-04\n",
            "Epoch 126/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0021 - val_loss: 9.1559e-04\n",
            "Epoch 127/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0021 - val_loss: 9.4478e-04\n",
            "Epoch 128/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0022 - val_loss: 9.2392e-04\n",
            "Epoch 129/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0021 - val_loss: 9.4689e-04\n",
            "Epoch 130/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0022 - val_loss: 9.0514e-04\n",
            "Epoch 131/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0021 - val_loss: 9.1201e-04\n",
            "Epoch 132/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0021 - val_loss: 9.0432e-04\n",
            "Epoch 133/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0021 - val_loss: 9.0511e-04\n",
            "Epoch 134/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0021 - val_loss: 9.0174e-04\n",
            "Epoch 135/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0021 - val_loss: 9.0396e-04\n",
            "Epoch 136/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0021 - val_loss: 8.9941e-04\n",
            "Epoch 137/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0021 - val_loss: 8.9244e-04\n",
            "Epoch 138/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0021 - val_loss: 8.9876e-04\n",
            "Epoch 139/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0021 - val_loss: 9.2740e-04\n",
            "Epoch 140/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0021 - val_loss: 9.0698e-04\n",
            "Epoch 141/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0020 - val_loss: 8.9503e-04\n",
            "Epoch 142/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0021 - val_loss: 8.9032e-04\n",
            "Epoch 143/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0021 - val_loss: 8.9663e-04\n",
            "Epoch 144/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0021 - val_loss: 8.9371e-04\n",
            "Epoch 145/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0021 - val_loss: 8.9726e-04\n",
            "Epoch 146/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0020 - val_loss: 8.8651e-04\n",
            "Epoch 147/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0020 - val_loss: 8.8342e-04\n",
            "Epoch 148/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0021 - val_loss: 8.8517e-04\n",
            "Epoch 149/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0021 - val_loss: 8.8411e-04\n",
            "Epoch 150/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0021 - val_loss: 9.1349e-04\n",
            "Epoch 151/1000\n",
            "17/17 [==============================] - 2s 131ms/step - loss: 0.0020 - val_loss: 8.8085e-04\n",
            "Epoch 152/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0020 - val_loss: 8.8158e-04\n",
            "Epoch 153/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0020 - val_loss: 8.7488e-04\n",
            "Epoch 154/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0021 - val_loss: 8.9888e-04\n",
            "Epoch 155/1000\n",
            "17/17 [==============================] - 2s 131ms/step - loss: 0.0020 - val_loss: 8.7765e-04\n",
            "Epoch 156/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0020 - val_loss: 8.7571e-04\n",
            "Epoch 157/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0020 - val_loss: 8.7391e-04\n",
            "Epoch 158/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0021 - val_loss: 8.8269e-04\n",
            "Epoch 159/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0020 - val_loss: 8.7056e-04\n",
            "Epoch 160/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0020 - val_loss: 8.7211e-04\n",
            "Epoch 161/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0020 - val_loss: 8.6349e-04\n",
            "Epoch 162/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0020 - val_loss: 8.6384e-04\n",
            "Epoch 163/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0020 - val_loss: 8.6829e-04\n",
            "Epoch 164/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0020 - val_loss: 8.6105e-04\n",
            "Epoch 165/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0019 - val_loss: 8.6764e-04\n",
            "Epoch 166/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0020 - val_loss: 8.5945e-04\n",
            "Epoch 167/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0020 - val_loss: 8.6421e-04\n",
            "Epoch 168/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0020 - val_loss: 8.6159e-04\n",
            "Epoch 169/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0020 - val_loss: 8.7069e-04\n",
            "Epoch 170/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0020 - val_loss: 8.6751e-04\n",
            "Epoch 171/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0020 - val_loss: 8.5150e-04\n",
            "Epoch 172/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0020 - val_loss: 8.5449e-04\n",
            "Epoch 173/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0020 - val_loss: 8.6037e-04\n",
            "Epoch 174/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0020 - val_loss: 8.4820e-04\n",
            "Epoch 175/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0019 - val_loss: 8.5157e-04\n",
            "Epoch 176/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0019 - val_loss: 8.5848e-04\n",
            "Epoch 177/1000\n",
            "17/17 [==============================] - 2s 128ms/step - loss: 0.0020 - val_loss: 8.5385e-04\n",
            "Epoch 178/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0020 - val_loss: 8.6902e-04\n",
            "Epoch 179/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0019 - val_loss: 8.4523e-04\n",
            "Epoch 180/1000\n",
            "17/17 [==============================] - 2s 131ms/step - loss: 0.0019 - val_loss: 8.4778e-04\n",
            "Epoch 181/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0019 - val_loss: 8.3973e-04\n",
            "Epoch 182/1000\n",
            "17/17 [==============================] - 2s 130ms/step - loss: 0.0019 - val_loss: 8.4370e-04\n",
            "Epoch 183/1000\n",
            "17/17 [==============================] - 2s 129ms/step - loss: 0.0020 - val_loss: 8.5958e-04\n",
            "Epoch 184/1000\n",
            " 5/17 [=======>......................] - ETA: 1s - loss: 0.0020"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9DxttIicnoV8",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "y_train_pred = model.predict(x_train)\n",
        "y_test_pred = model.predict(x_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8cq0ynZ9uQyk",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "print(y_test_pred.shape)\n",
        "print(y_test.shape)\n",
        "import matplotlib.pyplot as plt\n",
        "import matplotlib.patches as patches\n",
        "\n",
        "n = 0\n",
        "nrows = 4\n",
        "ncols = 4\n",
        "irand=np.random.choice(y_test.shape[0],nrows*ncols)\n",
        "fig, ax = plt.subplots(nrows,ncols,sharex=True,sharey=True,figsize=[100,100])\n",
        "for row in range(nrows):\n",
        "  for col in range(ncols):\n",
        "\n",
        "    to_image = np.reshape(x_test[irand[n]], (192, 256)) * 255\n",
        "    ax[row,col].imshow(to_image)\n",
        "\n",
        "    # Create a Rectangle patch\n",
        "    predicted = list(y_test_pred[irand[n]])\n",
        "    rect = patches.Rectangle((predicted[0] * 256,predicted[2] * 192),(predicted[1] - predicted[0]) * 256,(predicted[3] - predicted[2])*192,linewidth=10,edgecolor='r',facecolor='none', label = 'predicted')\n",
        "    # Add the patch to the Axes\n",
        "    ax[row,col].add_patch(rect)\n",
        "\n",
        "    predicted = list(y_test[irand[n]])\n",
        "    rect = patches.Rectangle((predicted[0] * 256,predicted[2] * 192),(predicted[1] - predicted[0]) * 256,(predicted[3] - predicted[2])*192,linewidth=10,edgecolor='y',facecolor='none', label = 'actual')\n",
        "    # Add the patch to the Axes\n",
        "    ax[row,col].add_patch(rect)\n",
        "    n += 1\n",
        "\n",
        "plt.legend()\n",
        "plt.show()\n"
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}